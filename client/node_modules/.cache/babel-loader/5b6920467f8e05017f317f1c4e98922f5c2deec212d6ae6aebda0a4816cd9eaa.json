{"ast":null,"code":"import { API_BASE_URL } from \"../constants/constants\";\n\n// Function to get budget from the backend. Method: GET\nexport const fetchBudget = async () => {\n  const response = await fetch(`${API_BASE_URL}/budget`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch expenses');\n  }\n\n  // Parsing the response to get the data\n  const budget = await response.json();\n  console.log(\"response in fetchBudget\", budget);\n  return budget;\n};","map":{"version":3,"names":["API_BASE_URL","fetchBudget","response","fetch","ok","Error","budget","json","console","log"],"sources":["/Users/froguro/Desktop/cse110/fa24-cse110-lab4-starter-code/client/src/utils/budget-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"../constants/constants\";\n\n// Function to get budget from the backend. Method: GET\nexport const fetchBudget = async (): Promise<number> => {\n    const response = await fetch(`${API_BASE_URL}/budget`);\n\tif (!response.ok) {\n    \tthrow new Error('Failed to fetch expenses');\n\t}\n\n\t// Parsing the response to get the data\n\tconst budget = await response.json();\n\n\tconsole.log(\"response in fetchBudget\", budget);\n\treturn budget;\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;;AAErD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAA6B;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,CAAC;EACzD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;;EAEA;EACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAEpCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,MAAM,CAAC;EAC9C,OAAOA,MAAM;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}