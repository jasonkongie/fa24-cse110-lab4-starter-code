{"ast":null,"code":"import { API_BASE_URL } from \"../constants/constants\";\n\n// Function to get budget from the backend. Method: GET\nexport const fetchBudget = async () => {\n  const response = await fetch(`${API_BASE_URL}/budget`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch expenses');\n  }\n\n  // Parsing the response to get the data\n  const budget = await response.json();\n  console.log(\"response in fetchBudget\", budget);\n  return budget.data;\n};\nexport const updateBudget = async newBudget => {\n  const response = await fetch(`${API_BASE_URL}/budget`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      amount: newBudget\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to update budget');\n  }\n\n  // Parsing the response to get the updated budget data\n  const updatedBudget = await response.json();\n  console.log(\"response in updateBudget\", updatedBudget);\n  return updatedBudget;\n};","map":{"version":3,"names":["API_BASE_URL","fetchBudget","response","fetch","ok","Error","budget","json","console","log","data","updateBudget","newBudget","method","headers","body","JSON","stringify","amount","updatedBudget"],"sources":["/Users/andrewlu/test/fa24-cse110-lab4-starter-code/client/src/utils/budget-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"../constants/constants\";\n\n// Function to get budget from the backend. Method: GET\nexport const fetchBudget = async (): Promise<number> => {\n    const response = await fetch(`${API_BASE_URL}/budget`);\n\tif (!response.ok) {\n    \tthrow new Error('Failed to fetch expenses');\n\t}\n\n\t// Parsing the response to get the data\n\tconst budget = await response.json();\n\n\tconsole.log(\"response in fetchBudget\", budget);\n\treturn budget.data;\n};\n\nexport const updateBudget = async (newBudget: number): Promise<number> => {\n\tconst response = await fetch(`${API_BASE_URL}/budget`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ amount: newBudget }),\n    });\n\n    if (!response.ok) {\n        throw new Error('Failed to update budget');\n    }\n\n    // Parsing the response to get the updated budget data\n    const updatedBudget = await response.json();\n\n    console.log(\"response in updateBudget\", updatedBudget);\n    return updatedBudget;\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;;AAErD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAA6B;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,CAAC;EACzD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;;EAEA;EACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAEpCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,MAAM,CAAC;EAC9C,OAAOA,MAAM,CAACI,IAAI;AACnB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,SAAiB,IAAsB;EACzE,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,EAAE;IAChDa,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAEN;IAAU,CAAC;EAC9C,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC9C;;EAEA;EACA,MAAMc,aAAa,GAAG,MAAMjB,QAAQ,CAACK,IAAI,CAAC,CAAC;EAE3CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEU,aAAa,CAAC;EACtD,OAAOA,aAAa;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}